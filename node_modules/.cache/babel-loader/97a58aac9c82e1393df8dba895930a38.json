{"ast":null,"code":"var _jsxFileName = \"/Users/jaywong/and-aua/src/QuestionList.js\";\nimport React from 'react';\nimport './App.css';\nimport JsonQuestions from './QAData.json';\nimport QuestionComponent from './QuestionComponent';\n\nclass QuestionList extends React.Component {\n  constructor() {\n    super(); // this.handleQuestion = this.handleQuestion.bind(this);\n    // this.handleYes = this.handleYes.bind(this);\n    // this.handleNo = this.handleNo.bind(this);\n\n    this.state = {\n      questions: Object.values(JsonQuestions) // this.setState({\n      //     questions: JsonQuestions.map(question => {title: question.title})\n      // })\n      //this.setState({ questions: Object.values(JsonQuestions)});\n\n    };\n  }\n\n  componentDidMount() {\n    let fetchData = () => {\n      Promise.resolve(questions).then(questions => {\n        this.setState({\n          data\n        });\n      });\n    };\n\n    fetchData();\n    this.update = setInterval(fetchData, 2000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.update);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.questions[0].map(question => React.createElement(QuestionComponent, {\n      questionTitle: question.title,\n      questionAuthor: question.author,\n      questionDateTime: question.datetime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default QuestionList;","map":{"version":3,"sources":["/Users/jaywong/and-aua/src/QuestionList.js"],"names":["React","JsonQuestions","QuestionComponent","QuestionList","Component","constructor","state","questions","Object","values","componentDidMount","fetchData","Promise","resolve","then","setState","data","update","setInterval","componentWillUnmount","clearInterval","render","map","question","title","author","datetime"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,aAAP,MAA0B,eAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA0C;AACtCC,EAAAA,WAAW,GAAE;AACT,YADS,CAGT;AACA;AACA;;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAEC,MAAM,CAACC,MAAP,CAAcR,aAAd,CADF,CAIb;AACA;AACA;AACA;;AAPa,KAAb;AAUD;;AACHS,EAAAA,iBAAiB,GAAE;AACf,QAAIC,SAAS,GAAG,MAAM;AAClBC,MAAAA,OAAO,CAACC,OAAR,CAAgBN,SAAhB,EAA2BO,IAA3B,CAAgCP,SAAS,IAAI;AAC7C,aAAKQ,QAAL,CAAc;AAACC,UAAAA;AAAD,SAAd;AACD,OAFC;AAGH,KAJD;;AAMAL,IAAAA,SAAS;AACT,SAAKM,MAAL,GAAcC,WAAW,CAACP,SAAD,EAAY,IAAZ,CAAzB;AACD;;AAEDQ,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKH,MAAN,CAAb;AACD;;AAEHI,EAAAA,MAAM,GAAG;AACT,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKf,KAAL,CAAWC,SAAX,CAAqB,CAArB,EAAwBe,GAAxB,CAA4BC,QAAQ,IAAI,oBAAC,iBAAD;AACzC,MAAA,aAAa,EAAEA,QAAQ,CAACC,KADiB;AAEzC,MAAA,cAAc,EAAED,QAAQ,CAACE,MAFgB;AAGzC,MAAA,gBAAgB,EAAEF,QAAQ,CAACG,QAHc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxC,CADD,CADJ;AAUC;;AA7CqC;;AAiD1C,eAAevB,YAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport JsonQuestions from './QAData.json'\nimport QuestionComponent from './QuestionComponent';\n\nclass QuestionList extends React.Component{\n    constructor(){\n        super()\n\n        // this.handleQuestion = this.handleQuestion.bind(this);\n        // this.handleYes = this.handleYes.bind(this);\n        // this.handleNo = this.handleNo.bind(this);\n\n        this.state = {\n            questions: Object.values(JsonQuestions)\n        }\n\n        // this.setState({\n        //     questions: JsonQuestions.map(question => {title: question.title})\n        // })\n        //this.setState({ questions: Object.values(JsonQuestions)});\n\n\n      }\n    componentDidMount(){   \n        let fetchData = () => {\n            Promise.resolve(questions).then(questions => {\n            this.setState({data})\n          })\n        }\n        \n        fetchData()\n        this.update = setInterval(fetchData, 2000)\n      }\n      \n      componentWillUnmount() {\n        clearInterval(this.update)\n      }\n\n    render() {\n    return (\n        <React.Fragment>\n        {this.state.questions[0].map(question => <QuestionComponent \n        questionTitle={question.title} \n        questionAuthor={question.author}\n        questionDateTime={question.datetime}\n        >\n        </QuestionComponent>)}\n        </React.Fragment>\n    );\n    }\n\n}\n\nexport default QuestionList;\n"]},"metadata":{},"sourceType":"module"}